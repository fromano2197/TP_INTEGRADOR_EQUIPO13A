CREATE DATABASE ClinicaDB
GO
USE ClinicaDB
GO

CREATE TABLE PERSONA (
    IDPERSONA INT PRIMARY KEY IDENTITY (1,1),
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDO VARCHAR(50) NOT NULL,
    FECHA_NACIMIENTO DATE NOT NULL,
    DNI INT  NOT NULL UNIQUE,
	ACTIVO BIT NOT NULL DEFAULT 1
)
GO

CREATE TABLE USUARIO (
    IDUSUARIO INT PRIMARY KEY IDENTITY(1,1),
    NOMBRE_USUARIO VARCHAR(50) NOT NULL,
    CONTRASENA VARCHAR(50) NOT NULL,
    TIPOUSUARIO VARCHAR(50) NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1
)
GO

CREATE TABLE PACIENTE (
    IDPACIENTE INT PRIMARY KEY IDENTITY(1,1),
    IDPERSONA INT NOT NULL,
    IDUSUARIO INT NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (IDPERSONA) REFERENCES PERSONA(IDPERSONA),
    FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO)
)
GO


CREATE TABLE INSTITUCION (
    IDINSTITUCION INT PRIMARY KEY IDENTITY(1,1),
    FECHA_APERTURA DATE NOT NULL,
    NOMBRE_INSTITUCION VARCHAR(100) NOT NULL,
    DIRECCION VARCHAR(200) NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1
)
GO

CREATE TABLE ESPECIALIDAD (
    IDESPECIALIDAD INT PRIMARY KEY IDENTITY(1,1),
    ESPECIALIDAD VARCHAR(50) NOT NULL UNIQUE,
	ACTIVO BIT NOT NULL DEFAULT 1
)
GO

CREATE TABLE PROFESIONAL (
    IDPROFESIONAL INT PRIMARY KEY IDENTITY(1,1),
    IDUSUARIO INT NOT NULL,
    IDPERSONA INT NOT NULL,
    FECHA_INGRESO DATE NOT NULL,
    MATRICULA INT NOT NULL,
    IDINSTITUCION INT NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO),
    FOREIGN KEY (IDPERSONA) REFERENCES PERSONA(IDPERSONA),
    FOREIGN KEY (IDINSTITUCION) REFERENCES INSTITUCION(IDINSTITUCION)
)
GO

CREATE TABLE ADMINISTRADOR (
    IDADMIN INT PRIMARY KEY IDENTITY(1,1),
    IDUSUARIO INT NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDO VARCHAR(50) NOT NULL,
    FECHA_INGRESO DATE NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO)
)
GO

CREATE TABLE CONTACTO (
    IDCONTACTO INT PRIMARY KEY IDENTITY(1,1),
    IDPERSONA INT NOT NULL,
    TELEFONO VARCHAR(15) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    DIRECCION VARCHAR(200) NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (IDPERSONA) REFERENCES PERSONA(IDPERSONA)
)
GO

CREATE TABLE PROFESIONAL_POR_ESPECIALIDAD (
    IDPROFESIONAL INT NOT NULL,
    IDESPECIALIDAD INT NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1,
    PRIMARY KEY (IDPROFESIONAL, IDESPECIALIDAD),  
    FOREIGN KEY (IDPROFESIONAL) REFERENCES PROFESIONAL(IDPROFESIONAL),
    FOREIGN KEY (IDESPECIALIDAD) REFERENCES ESPECIALIDAD(IDESPECIALIDAD)
);
GO

CREATE TABLE PROFESIONAL_POR_INSTITUCION (
    IDPROFESIONAL INT NOT NULL,
    IDINSTITUCION INT NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1,
    PRIMARY KEY (IDPROFESIONAL, IDINSTITUCION), 
    FOREIGN KEY (IDPROFESIONAL) REFERENCES PROFESIONAL(IDPROFESIONAL),
    FOREIGN KEY (IDINSTITUCION) REFERENCES INSTITUCION(IDINSTITUCION)
)
GO

CREATE TABLE TURNO (
    IDTURNO INT PRIMARY KEY IDENTITY(1,1),
    FECHA DATE NOT NULL,
    HORARIO TIME NOT NULL,
    IDPACIENTE INT NOT NULL,
    IDPROFESIONAL INT NOT NULL,
    IDESPECIALIDAD INT NOT NULL,
	ESTADO VARCHAR(50),
    OBSERVACIONES VARCHAR(200) NOT NULL,
	ACTIVO BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (IDPACIENTE) REFERENCES PACIENTE(IDPACIENTE),
    FOREIGN KEY (IDPROFESIONAL) REFERENCES PROFESIONAL(IDPROFESIONAL),
    FOREIGN KEY (IDESPECIALIDAD) REFERENCES ESPECIALIDAD(IDESPECIALIDAD)
)
GO

INSERT INTO USUARIO (NOMBRE_USUARIO, CONTRASENA, TIPOUSUARIO) VALUES 
('paciente1', 'Contraseña1', 'Paciente'),
('paciente2', 'Contraseña2', 'Paciente'),
('medico1', 'Contraseña3', 'Medico'),
('medico2', 'Contraseña4', 'Medico'),
('admin1', 'Contraseña5', 'Admin'),
('admin2', 'Contraseña6', 'Admin'),
('paciente3', 'Contraseña7', 'Paciente'),
('medico3', 'Contraseña8', 'Medico'),
('paciente4', 'Contraseña9', 'Paciente'),
('medico4', 'Contraseña10', 'Medico')

GO

INSERT INTO PERSONA ( NOMBRE, APELLIDO, FECHA_NACIMIENTO, DNI) VALUES 
( 'Pedro', 'González', '1990-05-15', 12345678),
( 'Lucía', 'Martínez', '1985-08-22', 87654321),
( 'Juan', 'Pérez', '1992-03-10', 11223344),
( 'Ana', 'López', '1988-12-30', 44332211),
( 'Carlos', 'Sánchez', '1995-07-17', 22334455),
( 'María', 'Gómez', '1991-04-05', 55667788),
( 'Javier', 'Torres', '1980-11-12', 99887766),
( 'Sofía', 'Díaz', '1993-09-20', 12332112),
( 'Diego', 'Morales', '1987-01-28', 44455566),
( 'Elena', 'Ramírez', '1994-10-14', 78945612)

GO

INSERT INTO CONTACTO (IDPERSONA, DIRECCION, EMAIL, TELEFONO) VALUES 
(1, 'Av. Libertador 1234', 'contacto1@gmail.com', '123456789'),
(2, 'Calle Falsa 5678', 'contacto2@gmail.com', '987654321'),
(3, 'Av. Santa Fe 9101', 'contacto3@gmail.com', '456789123'),
(4, 'Calle 11 de Septiembre 1111', 'contacto4@gmail.com', '321654987'),
(5, 'Calle Corrientes 2222', 'contacto5@gmail.com', '741258963'),
(6, 'Av. Rivadavia 3333', 'contacto6@gmail.com', '852369741'),
(7, 'Calle Tucumán 4444', 'contacto7@gmail.com', '159753486'),
(8, 'Calle Bolívar 5555', 'contacto8@gmail.com', '963852741'),
(9, 'Calle San Martín 6666', 'contacto9@gmail.com', '741369258'),
(10, 'Av. 9 de Julio 7777', 'contacto10@gmail.com', '258147963')

GO

INSERT INTO PACIENTE (IDPERSONA, IDUSUARIO) VALUES 
(1, 1),
(2, 2),
(3, 3),
(4, 4),
(5, 5),
(6, 6),
(7, 7),
(8, 8),
(9, 9),
(10, 10)

GO

INSERT INTO INSTITUCION (FECHA_APERTURA, NOMBRE_INSTITUCION, DIRECCION) VALUES 
('2000-01-01', 'Clinica del Sol', 'Av. Libertador 1234'),
('2005-03-15', 'Hospital Central', 'Calle Falsa 5678'),
('2010-07-20', 'Policlinico de Buenos Aires', 'Av. Santa Fe 9101'),
('2015-10-10', 'Sanatorio San Juan', 'Calle 11 de Septiembre 1111'),
('2018-12-25', 'Hospital Italiano', 'Calle Corrientes 2222')

GO

INSERT INTO ESPECIALIDAD (ESPECIALIDAD) VALUES 
('Medicina General'),
('Pediatría'),
('Ginecología'),
('Traumatología'),
('Cardiología')

GO

INSERT INTO PROFESIONAL (IDUSUARIO, IDPERSONA, FECHA_INGRESO, MATRICULA, IDINSTITUCION) VALUES 
(3, 1, '2020-01-01', 10001, 1),
(4, 2, '2019-02-02', 10002, 2),
(8, 3, '2021-03-03', 10003, 3),
(9, 4, '2022-04-04', 10004, 4),
(10, 5, '2018-05-05', 10005, 5)

GO

INSERT INTO ADMINISTRADOR (IDUSUARIO, NOMBRE, APELLIDO, FECHA_INGRESO) VALUES 
(5, 'Pedro', 'González', '2020-01-01'),
(6, 'Lucía', 'Martínez', '2019-02-02')

GO

INSERT INTO TURNO (FECHA, HORARIO, IDPACIENTE, IDPROFESIONAL, IDESPECIALIDAD, ESTADO, OBSERVACIONES) VALUES 
('2023-01-10', '10:00:00', 1, 1, 1, 'Pendiente', 'Chequeo general'),
('2023-02-20', '11:00:00', 2, 2, 2, 'Pendiente', 'Consulta pediátrica'),
('2023-03-15', '12:00:00', 3, 3, 3, 'Pendiente', 'Control ginecológico'),
('2023-04-25', '13:00:00', 4, 4, 4, 'Pendiente', 'Revisión traumatológica'),
('2023-05-30', '14:00:00', 5, 5, 5, 'Pendiente', 'Consulta cardiológica')

GO

INSERT INTO PROFESIONAL_POR_ESPECIALIDAD(IDPROFESIONAL, IDESPECIALIDAD) VALUES
(1, 1),
(1, 2),
(2, 2),
(3, 3),
(4, 4),
(5, 5)

GO

INSERT INTO PROFESIONAL_POR_INSTITUCION (IDPROFESIONAL, IDINSTITUCION) VALUES
(1, 1),
(2, 2),
(3, 1),
(4, 3),
(5, 2)  

USE ClinicaDB
GO
CREATE PROCEDURE SP_AGREGAR_PACIENTE (
    @DNI INT,
    @NOMBRE VARCHAR(50),
    @APELLIDO VARCHAR(50),
    @FECHA_NACIMIENTO DATE,
    @EMAIL VARCHAR(50),
    @TELEFONO INT,
    @DIRECCION VARCHAR(50),
    @USUARIO VARCHAR(50),
    @PASS VARCHAR(50)
)
AS
BEGIN
    BEGIN TRY
        BEGIN TRANSACTION;
        
        INSERT INTO PERSONA (NOMBRE, APELLIDO, FECHA_NACIMIENTO, DNI)
        VALUES (@NOMBRE, @APELLIDO, @FECHA_NACIMIENTO, @DNI);
        DECLARE @IDPERSONA INT = SCOPE_IDENTITY();
        

        INSERT INTO CONTACTO (IDPERSONA, TELEFONO, EMAIL, DIRECCION)
        VALUES (@IDPERSONA, @TELEFONO, @EMAIL, @DIRECCION);
        
        INSERT INTO USUARIO (NOMBRE_USUARIO, CONTRASENA, TIPOUSUARIO)
        VALUES (@USUARIO, @PASS, 'Paciente');
        DECLARE @IDUSUARIO INT = SCOPE_IDENTITY();
        
        INSERT INTO PACIENTE (IDPERSONA, IDUSUARIO)
        VALUES (@IDPERSONA, @IDUSUARIO);
        
        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
        DECLARE @ErrorNumber INT = ERROR_NUMBER();
        DECLARE @ErrorLine INT = ERROR_LINE();
        RAISERROR ('NO SE PUDO REGISTRAR PERSONA. Error %d en la línea %d: %s', 
                   16, 1, @ErrorNumber, @ErrorLine, @ErrorMessage);
    END CATCH;
END;


GO 

CREATE PROCEDURE SP_AGREGAR_PROFESIONAL (
    @DNI INT,
    @NOMBRE VARCHAR(50),
    @APELLIDO VARCHAR(50),
    @FECHA_NACIMIENTO DATE,
    @EMAIL VARCHAR(100),
    @TELEFONO VARCHAR(15),
    @DIRECCION VARCHAR(200),
    @USUARIO VARCHAR(50),
    @CONTRASENA VARCHAR(50),
    @TIPO_USUARIO VARCHAR(50),
    @FECHA_INGRESO DATE,
    @MATRICULA INT,
    @IDINSTITUCION INT,
    @ESPECIALIDADES VARCHAR(MAX)
)
AS
BEGIN
    DECLARE @IDPERSONA INT, @IDUSUARIO INT, @IDPROFESIONAL INT;
    DECLARE @XML XML;
    DECLARE @ESPECIALIDAD VARCHAR(50);
    BEGIN TRANSACTION;

    BEGIN TRY
        INSERT INTO PERSONA (DNI, NOMBRE, APELLIDO, FECHA_NACIMIENTO)
        VALUES (@DNI, @NOMBRE, @APELLIDO, @FECHA_NACIMIENTO);

        SET @IDPERSONA = SCOPE_IDENTITY();

        INSERT INTO CONTACTO (IDPERSONA, TELEFONO, EMAIL, DIRECCION)
        VALUES (@IDPERSONA, @TELEFONO, @EMAIL, @DIRECCION);

        INSERT INTO USUARIO (NOMBRE_USUARIO, CONTRASENA, TIPOUSUARIO)
        VALUES (@USUARIO, @CONTRASENA, @TIPO_USUARIO);

        SET @IDUSUARIO = SCOPE_IDENTITY();

        INSERT INTO PROFESIONAL (IDUSUARIO, IDPERSONA, FECHA_INGRESO, MATRICULA, IDINSTITUCION)
        VALUES (@IDUSUARIO, @IDPERSONA, @FECHA_INGRESO, @MATRICULA, @IDINSTITUCION);

        SET @IDPROFESIONAL = SCOPE_IDENTITY();

        SET @XML = CAST('<x>' + REPLACE(@ESPECIALIDADES, ',', '</x><x>') + '</x>' AS XML);

        DECLARE ESPECIALIDAD_CURSOR CURSOR FOR
            SELECT T.C.value('.', 'VARCHAR(50)') 
            FROM @XML.nodes('x') T(C);

        OPEN ESPECIALIDAD_CURSOR;
        FETCH NEXT FROM ESPECIALIDAD_CURSOR INTO @ESPECIALIDAD;

        WHILE @@FETCH_STATUS = 0
        BEGIN

            IF NOT EXISTS (SELECT 1 FROM ESPECIALIDAD WHERE ESPECIALIDAD = @ESPECIALIDAD)
            BEGIN
                INSERT INTO ESPECIALIDAD (ESPECIALIDAD)
                VALUES (@ESPECIALIDAD);
            END

            INSERT INTO PROFESIONAL_POR_ESPECIALIDAD (IDPROFESIONAL, IDESPECIALIDAD)
            SELECT @IDPROFESIONAL, IDESPECIALIDAD
            FROM ESPECIALIDAD
            WHERE ESPECIALIDAD = @ESPECIALIDAD;

            FETCH NEXT FROM ESPECIALIDAD_CURSOR INTO @ESPECIALIDAD;
        END

        CLOSE ESPECIALIDAD_CURSOR;
        DEALLOCATE ESPECIALIDAD_CURSOR;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END

GO

CREATE PROCEDURE SP_BAJA_LOGICA_PROFESIONAL (
    @IDPERSONA INT
)
AS
BEGIN
    DECLARE @IDUSUARIO INT, @IDPROFESIONAL INT;

    BEGIN TRANSACTION;

    BEGIN TRY

        SELECT 
            @IDUSUARIO = pr.IDUSUARIO,
            @IDPROFESIONAL = pr.IDPROFESIONAL
        FROM PROFESIONAL pr
        WHERE pr.IDPERSONA = @IDPERSONA;


        IF @IDUSUARIO IS NULL OR @IDPROFESIONAL IS NULL
        BEGIN
            THROW 50000, 'El profesional no existe.', 1;
        END

        UPDATE PROFESIONAL
        SET ACTIVO = 0
        WHERE IDPROFESIONAL = @IDPROFESIONAL;

        UPDATE USUARIO
        SET ACTIVO = 0
        WHERE IDUSUARIO = @IDUSUARIO;

        UPDATE CONTACTO
        SET ACTIVO = 0
        WHERE IDPERSONA = @IDPERSONA;

        UPDATE PERSONA
        SET ACTIVO = 0
        WHERE IDPERSONA = @IDPERSONA;

        UPDATE PROFESIONAL_POR_ESPECIALIDAD
        SET ACTIVO = 0
        WHERE IDPROFESIONAL = @IDPROFESIONAL;

        UPDATE PROFESIONAL_POR_INSTITUCION
        SET ACTIVO = 0
        WHERE IDPROFESIONAL = @IDPROFESIONAL;

        COMMIT TRANSACTION; 
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION; 
        THROW;  
    END CATCH
END;

GO

CREATE PROCEDURE SP_AGREGAR_INSTITUCION
    @NOMBRE_INSTITUCION VARCHAR(100),
    @FECHA_APERTURA DATE,
    @DIRECCION VARCHAR(200)
AS
BEGIN
    BEGIN TRY
       
        BEGIN TRANSACTION;
        
      
        INSERT INTO INSTITUCION (NOMBRE_INSTITUCION, FECHA_APERTURA, DIRECCION)
        VALUES (@NOMBRE_INSTITUCION, @FECHA_APERTURA, @DIRECCION);
        
        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        
        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
        DECLARE @ErrorNumber INT = ERROR_NUMBER();
        DECLARE @ErrorLine INT = ERROR_LINE();
        
        RAISERROR ('Error al intentar agregar institución. Error %d en la línea %d: %s', 
                   16, 1, @ErrorNumber, @ErrorLine, @ErrorMessage);
    END CATCH;
END;
GO

CREATE PROCEDURE SP_AGREGAR_ESPECIALIDAD
    @ESPECIALIDAD VARCHAR(100)
AS
BEGIN
    BEGIN TRY
       
        BEGIN TRANSACTION;
        
      
        INSERT INTO ESPECIALIDAD (ESPECIALIDAD)
        VALUES (@ESPECIALIDAD)
        
        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        
        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
        DECLARE @ErrorNumber INT = ERROR_NUMBER();
        DECLARE @ErrorLine INT = ERROR_LINE();
        
        RAISERROR ('Error al intentar agregar especialidad. Error %d en la línea %d: %s', 
                   16, 1, @ErrorNumber, @ErrorLine, @ErrorMessage);
    END CATCH;
END;
GO

